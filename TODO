Levels
------
- Entry
- Regulation
	- Smallish square rooms with only one-width corridors.
	- Lots of minor gauges, valves, etc.
	- Most machines are explosive.
	- Postprocessing: change walls that are shared with multiple rooms to
	  windows?
- Laboratory
	x Large open space.
	x Stockpiles of ores, and vials.
	x Whole floor is geared to the production of vials and usage of them.
	x Production of vials:
	  x Ore "elevator", supposedly brings up ores from lower floors.
	    Dumps ores on nearby tiles.
	  x Haulers bring ores to ore stockpiles, and then to extractors..
	  x Extractor machines create vials.
	  x Haulers bring vials to vial stockpiles.
	  x Haulers take vials to research stations.
	x Usage of vials: research stations, alchemists use them to "experiment"
	  on prisoners.
	- Has traps of {blinding, pain-causing} gas.
- Mining
	- Caves, brogue-style.
	- Rooms filled with pickaxes, boulders, and carts.
	- Splotches of the map use materials like sulon/chlade/realgar/hematite.
	- "Miners" go about, cutting up map portions with ores.
	- "Haulers" take boulders and move them to ore elevators/stockpiles.
x Smithing
	x Large open area.
	x Structures plopped all over the place.
		x Filled with forges and smithing machines.
		x Has stockpiles of ingots, ores, and metal goods.
		x Elevator and some stockpiles should have walls+doors
		  around them...
	x Whole floor is geared to the production of chains.
	x Production of vials:
	  x Ore "elevator", supposedly brings up ores from lower floors.
	    Dumps iron ores on nearby tiles.
	    x Hematite
	    - Magnetite
	  x Haulers bring ores to ore stockpiles, and later on carry them to the
	    blast furnaces.
	  x Blast furnaces smelt ores into iron ingots.
	  x Haulers bring ingots to ingots stockpiles.
	  x Haulers take ingots to chain presses.
	  x Chain presses stamp out chain and link them together.
	  x Haulers take chains to stockpiles.
	x Has large lakes of lava.
x Prison
	x Medium-short corridors with rooms with locked enclosures of prisoners.
	x Some torture rooms maybe.
	x Levers for each room to unlock doors and release prisoners.

New Levels
----------
"Solitary" ("SOL") or "Confinement" ("CON"):
- Grid layout ("Manhattan-like"?):
  ...............................
  .####...####..####..####..####.
  .#..#...#..#..#..#..#..#..#..#.
  .#+##...#+##..#..#..#+##..#+##.
  ..............#..#.............
  .####...####..#..+..####..####.
  .#..#...#..#..#..#..#..#..#..#.
  .#+##...#+##..####..#+##..#+##.
  ...............................
  .####...##########..####..####.
  .#..#...#........#..#..#..#..#.
  .#+##...#######+##..#+##..#+##.
  ...............................
  .####...####..####..####..####.
  .#..#...#..#..#..#..#..#..#..#.
  .#+##...#+##..#+##..#+##..#+##.
  ...............................
- (Larger rooms are optional?)
- Each room has one goblin prisoner.
- Plenty of patrols, and guards at hallway junctions
- Layout leads to interesting gameplay, I think?

Something like "Quarters"/"Leisure":
- Barracks/clusters of beds
  - Full of mobs that can wake up at any time
- Tables and chairs
- Chests of food and drink
- Nursery? (kill baby goblins! fun!)

Intelligence
------------
- Stupid mobs will have trouble determining what's a stronger enemy
  (morale system).
- Intelligent mobs won't assign A* penalty to areas out of max FOV range.
  - Thus, stupid mobs will prefer to walk through areas they can see, whereas
    intelligent mobs will always take the shorter path.

Undead
------
Undead:
- May be mindless, depending on how they were raised from the dead.
- Has 150% strength bonus.
- Has -50% speed nerf.
- Has -50% dexterity nerf.
- Can only see 3-4 tiles ahead of them.
- Emit miasma.
  - Miasma has no effect, but may decrease morale in AI'd mobs.
  - Serves to give early warning of undead's presence.
- Are immune to Pain and Fear.
- Never flee, unless commanded so by their squad leader.
- Don't breath gases, and are thus not affected by most of them.
- Are immune to stabbing(?)
- Have a willpower of basically zero, and can thus be affected by any spell.


Movement patterns
-----------------
sneak         [move, move, rest, move]
merciless     [move(A), attack(A), move(A), attack(A)]
counterattack [move(S), move(S), move(N), attack(A)]
charge        [move(A), move(A), move(A), attack(A)]
lunge         [move(A) (lands next to mob)]
recuperate    [rest, rest, rest, rest]
(See rings for other movement patterns.)


Rings
-----
- Rings will not work as soon as they are wielded, but must be worn for a few
  hundred turns to reach their full potential.
- Rings don't have an "enchantment" level, but "tiers" instead (mithril, gold,
  silver, and iron).
- Rings: [p]assive (acting each turn) or [a]ctive (requiring user to move in pattern)
ancient ring of knowledge [a/p]
	- Passively allows player to know if they're still being pursued.
	- Allows player to see spots near pursuers (but not the pursuers
	  themselves?) for ~3-5 turns.
	  - Movement pattern:
contemptuous ring of intimidation [a]
	- Confers either stun or fear on mob when moving toward mob.
	- Must land right next to mob.
	- Movement pattern: [move(N), move(N), move(N), move(N)]
creeping ring of telepathy [a]
	- Confers telepathy to all mobs in FOV.
	- Slows down or restricts player movement.
	- Movement pattern: [move(NE), move(SE), move(SW), move(NW)]
dancing ring of sidestepping [a]
	- Teleport player around mob to area outside of that mob's FOV, enabling a stab.
	- Paralyzes mob for exactly one turn.
	- Must land next to mob.
	- Movement pattern: [move(NW), move(NE), move(NW), move(NE)]
singing ring of echolocation [p]
	- Gives player basic knowledge of dungeon's layout nearby sounds the player
	  can hear. The wearer will not know about dungeon features, just walls and
	  floors.
ring of evasion [a]
	- Spews fog outward from player when zigzagging and fleeing, increasing evasion.
	- Example movement pattern: [move(NW), move(NE), move(NW), move(NE)]
vampiric ring of draining [a/p]
	- Drains an enemy for {speed,health,HP}.
	- Allows player to see that mob and all tiles within two spaces.
	- Player will get a status (paralyzed? slowed? negative regen? traumatize? stun?)
	  for a bit when the enemy dies OR the enemy sees the player.
	- The drained mob immedietely becomes an enemy to everyone.
	- If the enemy dies, the player is teleported there in its place?
	- Movement pattern: ???
	- Also: when worn, allows player to sense nearby mobs.
		- Movement pattern: ???
faded ring of fire [a]
	- Causes dark gas to emanate from player. Gas is opaque and blocks all light.
		- Movement pattern:
	- Causes all nearby machines to lose power for a bit (aka turn out the lights).
		- Movement pattern:
	- Raises all nearby corpses to attack enemies for a brief period of time.
		- Movement pattern:
	- Causes tiles in 3-space radius around player to burst into flame.
		- Movement pattern:
ring of invisibility
	- Doesn't make wearer invisible, but prevents other hostiles from noticing
	  the wearer, even if they walk within inches of each other's nose.


Potions/Vials
--------------------
Potions: [s]tatus, [g]as, [c]ustom
x potion of confuzzlementation [g]
  Confusion.
x potion of petrification [g]
  Paralysis.
x potion of fog (TODO: name) [g]
  Fog.
x potion of acceleration [s]
  Haste.
x potion of preservation [c]
  Heals 20% of health and removes poison.
x potion of recuperation [s]
  Causes faster regeneration rate.
x potion of deceleration [s]
  Slowdown.
x potion of coagulation
  Poison (loss of regen, occasional damage, weakness)
x potion of invigoration [s]
  Temporarily increases strength and dexterity.
- potion of cremation [c]
  Explodes when opened, heating surrounding air.
- potion of refrigeration [g]
  Freezes the surrounding air, slowing down cold-blooded mobs.
- potion of decimation [c]
  Explosion that can destroy walls.
- potion of defoliation [g]
  Poison that destroys plants and/or fungi.
- potion of dehumanization
  Makes mob mindless?
- potion of intoxication [s]
  Drunkenness.
- vial of tanus
  Status: backvision
    Makes mob see directly behind them as well as in front of them.
- vial of slade
  Status: bishop
    Makes mob unable to move in cardinal directions.
- vial of pholenine
  Status: rook
    Makes mob unable to move in diagonal directions.
- vial of chloroforon
- vial of hyine
- vial of quagenin
- vial of cataline
  Status: nightvision
    Gives mob perfect night vision.
- vial of flouin
  Status: dayblindness
    Makes mob unable to see in brightly-lit tiles.
- vial of phytin
  Status: nightblindness
    Makes mob unable to see in dimly-lit tiles.


Abominations
------------
Strange mobs found on LAB levels.
- Creeping Abomination
  - Like Blue Monk (in Hazard Level) or weeping angels.
- Slinking Abomination
  - Refuses to move into a tile that doesn't have at least one wall as a neighbor.
  - When spotted, IF the spotter is an enemy and has half of it's normal HP, it
    moves in and attacks, still keeping close to walls.
    Otherwise, it turns into a piece of artwork.
  - Game description should describe it as having an extremely hideous appearance.
- Undulating Abomination
  - Slow (speed == ~180?)
  - If enemy is less than X spaces away, it moves toward enemy.
  - Doesn't attack.
  - Emits gas that doesn't spread far. Gas slows down affected mobs. (100s => 150s)
  - If attacked, paralyzes player.


Posters
-------
(moved to data/posters.tsv)


Unique mobs
---------
- Captain of the Guard
- Head of Research
- Marshall of the Dead
  Nahorego Zinnugh
- Keeper of the Fire Stones (High Priest)
  Uberego Sohlgh√¢sh
- the player
  Obomus-Nulohelmir

Books
-----
"Kornalg: The Life and Times of the Ancient Hill-King"
	- "You learn that Kornalg was undoubtedly the bravest, strongest,
	   besterestest hill goblin that ever was."
"This was Kornalg"
	- "You learn that Kornalg was by right king of the whole universe."
"Meing Krampgh"
	- "You learn that hill goblins are destined to rule the world."
	- "You learn that those filthy cave-goblins have been infiltrating
	   hill-goblin society for centuries."
"Histories of Men"
	- "You learn that dark-skinned humans are automatically inferior to other
	   fang-possessing bipeds."
"On the Descent of Goblins"
	- "You learn about the Hill Goblin Master Race."
"Durgh Stammer"
	- "You learn that hill goblins are vastly superior to cave goblins."
"The Path to Goblin Supremacy"
"The Weekly Hurricane"
"On the Origins of Slade"
"An Inquiry into the Chemical Properties of Phytin"
"On the Molecular Structure of Tanus"
"Operating Traumbulnahl Machinery"
	- "You learn that human-leather gloves are required while operating
	  extractors."
"Optimizing Distance Functions"
	- "You learn that Chebyshev distance is to be preferred to Euclidean
	  distance for tile-based games."
"Optimizing the A* Algorithm"
	- "You learn about the Manhattan distance function."
"Daily Consumption of Butter Tea"
	- "You learn that some wacko humans actually like drinking rancid
	  butter mash."
	- "You learn the ratios of butter and tea needed to produce butter tea."
"A Short Guide on Brewing Kombucha"
	- "You learn that some weird humans actually like drinking spoiled tea."
	- "You learn the ratios of sugar and tea needed to brew kombucha."
recipe books
	- "You learn how to pickle goblin roasts."
	- "You learn how to properly butcher humans carcases."
dungeon maps
	- maps of just mob stations
	- maps of just presence of walls/floors
	- maps of special item locations (rings/potions)


Materials (v = vial, s = stone, g = gem, o = ore/metal)
---------
g	vaand
g	chlorovese
g	chlus
g	caus
g	magenus
g	silus		Silicate, composes fire-proof cloaks.
g	chlade		Like mese in Minetest. Composes crystal statues. Glows.
			Associated with demonic powers.
o	magonium
o	beus
o	sylvium
o	magalt
o	vibonium
v	tanus		Extracted from talonium.
v	slade		Extracted from sulon.
v	pholenine	Extracted from phosire.
v	chloroforon
v	hyine		Extracted from hyalt.
v	quagenine	Extracted from quaese.
v	flouine
v	cataline	Extracted from catasine.
v	phytin		Extracted from phybro.
s	talonium	Ore of tanus.
s	sulon		Ore of slade.
s	phosire		Ore of pholenine.
s	hyalt		Ore of hyine.
s	quaese		Ore of quagenine.
s	catasine	Ore of cataline.
s	phybro		Ore of phytin.
s	dobalene	Makes up the walls of LAB.
s	nebro		Like slade in Dwarf Fortress -- extremely heavy.
			Associated with demonic powers.
s	vangenite	Makes up the walls of machinery in LAB. Glows dimly.
s	bolyvese
s	orthire		Uranium. Nuclear reactors are referred to as
			"Orthire Furnaces".
s	maron


Roadmap
-------

Basic stuff:
============
x Basic prefabs
x Allow for definition of a 'start' prefab
x Allow for placement of player in a location
x Allow for placement of specific item in a location
x Add exit staircase that exits game
x Add screen/confirmation for winning
x Add screen/confirmation for death
x Add potion struct, define some potions
x Throw some potions around during mapgen
x Allow picking up of potions
x Add dialog to view inventory
x Add dialog to use item in inventory (quaff potions)
x Add dialog to throw potion at mob
x Define armor struct, use on mobs and player
x Define melee weapon struct and dagger/spear, use on mobs and player
x Add the Openworld
x Allow stacking in inventory
x Add ranged weaponry
x Alternative weapons, weapon swapping

Ring and movements:
===================
- Define where rings should be in prefabs/mobs

Lighting/FOV:
=============
x Allow for prefabs to "seed" a map
  (Needed to ensure that power stations can appear on map)
x Refactor/cleanup FOV helper methods:
  x Generalize raycasting function
  x Add quadrants to raycasting
  x Use raycasting for everyone, remove shadowcasting
  x Use matrix to store mob's FOV, instead of array.
  x Update memoized sin/cos values
x Ensure that raycasting method doesn't have any artifacts
x Set a filter on area outside FOV (sepia? grayscale?)
x Show vision "energies" on FOV
x Make lighting system affect stealth/FOV
~ Make raycasting use bounding box instead of slower trigonometry method?

Temperature
===========
x Add temperature matrix, tickTemperature(); make magma emit heat
x Integrate with lighting system (make hot tiles emit light)
- Add emits_heat to Mob{}, define Burning Brute
x Update tickTemperature() to work with material's specific heat
- Add min_heat, max_heat to Mob{}; add tickTemperatureEffects()
- Allow walls to melt
- Allow props and machines to be damaged and melt

Room features/Mapgen:
=====================
- Allow close prefabs
- Make connectors flanked by floors a floor or door
- Add some lichen and fungi to rooms
x Add statues and chests to corners of rooms
x Add posters
~ Allow for prefabs to be rotated
x Allow for prefabs to have alternate layouts
x Allow for prefabs to be restricted to a map
x Create corridors between parallel prefabs/rooms
x Make the "lamps" electric "braziers"
  - Place them in center of rooms.
  x Place them in corners of rooms.
  - Make them explosive and electrocutive!
x Useless items in bins, cabinets, etc
- Weapons and armor in cabinets
- Allow multiple subrooms in rooms (BSP?)
- Cave-like boundaries around edges of map in SMI
- Different types of power generators for different maps:
    - TOP, REG: regular power plant
    - PRI:      coal furnace
    - SMI:      turbines (geothermal)
    - LAB:      nuclear power plant
- Allow multi-width corridors (aka hallways)
- Prisoners chained up to the wall in PRI
- Preserved corpses lined up along walls in PRI?
  - Can be animated by angry necromancers.

Mobs, AI
========
x Make watchers shout loudly
x Allow mobs to shuffle past each other in corridors
x Ensure that laborers don't leave to investigate noises
x Ensure that the EnemyRecord counter is only decremented if the pursuer can
  see the last spot where the hostile was seen
- Move off of tile if that tile has dangerous gas
- Go into rage when encountering corpse of allied mob
- "Scan" room when encountering blood spattering
x Make watchers smack intruders when they can't run
- Mobs that throw potions of light at hostiles that are in areas too dark for
  them to see
- Fleeing mobs and mobs that have just spotted an enemy "tell" nearby allies
  about the hostile
x Define what undead are somewhere (combat bonuses, stat increases, miasma
  emissions, etc)
- Add rat+food system
  - Farmers and vending machines fill food stockpiles
  - Mobs go to stockpile, grab food, and eat
  - Mobs spatter crumbs on the floor
  - Rats, hiding in dark corners, emerge and eat/clean crumbs
  - Rats come to lick up blood and feast on corpses as well
  - Guards chase down rats and viciously kill them
  - Rats "spawn" in some way
  - etc
- Make .Hallucination status possible
- Make cleaners remove nets shot out by sentinels
- Revamp squad AI.
- Add morale system for each mob, affected by:
  - Loss of leader (squad)
  - Battlecry of leader (squad)
  - Presence of stronger allies
  - Presence of stronger enemies
  - Presence of many enemies
  - Pain,Fear effects
  - Miasma gas, other gases

User Interface
==============
x Add padding between infopane/msgpane and map
x Make it easier to tell the heavily wounded from dead
- @ command to see player's full AC and stats
x Fix showing of display percentage of last damage
- UI for status effects (paralysis, etc)
- Ring messages (full power, half power, equipped)
x Only print trap messages when culprit is player
- Group identical messages in msgpane
x Attack messages should be nice and descriptive ("You skewer the goblin!")
  - Even more descriptive! ("The troll smashes you like an overripe mango!!")
- Show red/yellow/orange for low health bars
x Use proper CP407 arrows for staircases
- Show prisoner's activity as "prisoner" instead of {"investigate","attack"}, etc

Fixes
=====
x Add walls to edges of map after mapgen
x Place stairs only in rooms
x Fix sound propagation

Caverns:
==========
- Add portals to Openworld from the main dungeon, with sentinels
x Add goblins, rats, and other mobs to populate the Openworld
- Add Burning Brutes and Lava Flans to the Openworld
- Add lichen, fungi, and lava to the Openworld

Ideas
=====
[+] planned, [~] obsolete, [x] done
~ Layers, as in Brogue? (gas, liquid, surface, floor, etc.)
- Cloaks of invisibility, confusion, blinding, camouflage, electricity
  resistance, fire resistance, etc.
- Ring of seeing (magic mapping)
- Rings have negative effects (decreased piety/willpower)
- Add bonus (or neg bonus) to attacker if defender moved or didn't move in the
  past two turns
- Ring of intimidation that magic maps dungeon based on mob's memory
- Crafting grid/alchemy by arranging items on map and dancing
x Lighting system and torches
- Light colors
x Ring of echolocation to magic-map neighbors of sound-producing tiles
- "Night", when guards sleep, torches go out, and night creatures awaken
- "Seed database" that stores bones for players who died during game, then
  shows ingame bones/corpses/undead on other games
- Candles that destory people/objects/rooms when quenched
- "Permeability" instead of walkability, that lets creatures pass if they are
  small enough (e.g., rats and small spires could pass through iron bars)
- Tile "integrity" that reduces when tile is hit with explosion
- Radioactivity system: nuclear reactors, uranium, corium, nuclear bombs that
  the player can blow up for fun
- Orchestra/Concert, that sings/players instruments and distracts guards
	- Bonus: use Nazi singer names
- Goblin "organizations" (purely eye candy)
	- the Goblin Brotherhood, the ProudGobbos, the Seven Percenters, the
	  Goblin Nations, etc
- Night creatures should pop out of artwork at night
~ Stone guardians that patrol map and cast confusion at enemies, but move at 1
  tile per 10-20 turns
- Enemies that surrender or start whimpering when fleeing and trapped in a
  corner, or maybe perpare for one final all-out assault
- Enemies that suicide when cornered and about to die.
- Headstones with previous player's comments on them, or ghosts that mourn
  previous player's carelessnes (think DCSS ghosts)
	- Bonus: the ghosts/gravestones are found in the temple in prison cells
- Pub for guards to get drunk
- Ring to detect powered machines
- Ring/feature to detect what kind of mob made a noise
- Radioactive gas leaking from a warehouse on a few levels, so a kind of food
  clock
- Ability to rifle sleeping/drunk/stunned guards as well as corpses
- Lava flans
- Undead have other interesting kinds of negative effects when they score a
  hit?
	- Reduced max HP, less regen rate, reduced stealth
- Areas that speed up or slow down mobs
- Lichen/fungi that puts mobs to sleep (enchanted ground)
- Ice/oily floor that randomizes movement
- Undead should drain stats, max HP, cause fatigue, etc
- Sticky ground that reduces evasion
- Mobile traps that can be placed by player and used to lure guards on top
	- {Bombs/landmines, bear trap, damage trap} "kits"
- Statues can only move when out of sight, and then very fast.
- Item/lever player can trigger to unlock locked doors in room, releasing
  prisoners and creating maximum chaos.
+ Use Dijkstra for lighting/FOV?
- Potion and Ring ID system.
x Blood spattering?
- Speech bubbles in following situations:
  - On spotting an enemy ("Aha!", "It's a <species>!", "It's the @!!")
  - On being cornered ("Don't touch me!", "Go away!", "No farther!")
  - On seeing a dead ally, killed by a visible hostile ("Murderer!")
  - On seeing a dead ally, killed by a nonvisible hostile ("Oh no!", "Noo!")
  - On pursuing a fleeing hostile ("Coward!", "Wimp!", "Bye clown!")
  - On investigating a noise ("...?", "What?")
  - On completing investigation of a noise ("Must have been rats!")
  - On finding an pursued enemy ("Its here!", "I've got you now!", "Now you're mine!")
- Smell mechanics that allow, say, hellhounds and snakes to detect intruders
  even if they can't see them.
- Ranged melee weapons, e.g., spear and whips
x Add braziers that are built into the walls (aka torches), and use that
  instead for corridors
- Some kind of squad-forming fast-moving swarming mob, like killer bees (DCSS)
  or swarmers (Cogmind 7DRL)
- Level with hospital (get healed with healing gas), nursery (kill baby goblins!),
  dining room, bedrooms, kitchen
- "cameras kits" that create surface items that keep the surrounding area in the
  FOV of all mobs that have a certain ring on
- Experiment with "bouncing" rays in raycasting routines
- Ring/item that has leaving a vunerable "copy" of yourself where that item/ring
  was activated (that is, *two* tiles have the .mob field pointing to the player,
  while the player.coord field points to only one of them).

Optimizations
=============
- Use @mulAdd where possible (FOV, A*, Dijkstra, light/atmosphere/sound systems)
- Use @setCold(true) where possible (see above for places to look)
- Use SIMD where possible
x Use a matrix to mark nodes as closed (instead of a heap-allocated list) for
  Dijkstra.
x Use Manhattan distance for A* algorithm (overestimating heuristic might be better?)
- Allow functions that repeatedly call A* for the same mob to store an "AstarContext"
  structure that allows astar.path() to reuse cell cost, walkablility, etc data
  without calling those functions again.
- Use atan to calculate octant in which coord appears relative to mob's coord, instead
  of the slower method seen in Coord.closestDirectionTo()

Code cleanups
=============
- Defined unimplemented(), todo(), and oom()
- Stop using the `catch unreachable` syntax:
    libera#zig 19:58 <ikskuh> "catch unreachable" will happily continue to execute code
                              after the error in non-safe build modes
- Remove all floats from color functions, sound systems, gas systems, etc.
- Review usage of usize and change to u64/u32 where needed to prevent portability issues
- Define custom assert() that can give additional context
- Define Lua API and move the following to Lua data files:
  - levelFeature definitions (see mapgen.zig)
  - levelConfig (see mapgen.zig)
- Cleanup/factorize container/item manipulation code for Machine AI.

Refactorings
============
- Define Species struct and carry immutable data for each mob in it
x Convert enum+union pair to union(enum) (see std/fifo.zig) where needed
x Research Manhattan distance vs Euclidian distance vs Moore neighborhood:
  https://reddit.com/r/roguelikedev/comments/nev1jg/a_pathfinding_unstablenondeterministic/
x Add power component to machines
x Use Chebyshev instead of Manhattan distance
- Use arrays and indexes for state.* instead of linked lists and pointers
- Use linked list for roomslist, and use raw pointers instead of indexes
  whenever needed in mapgen code.
- Keep track of each connected room in mapgen, so that no room connects to the
  same room twice.

Tests
=====
x Ensure that distance() treats diagonal moves as more expensive than cardinal moves, or
  the opposite if Chebyshev is used later.
